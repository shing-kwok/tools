<head>	<title>Server Price Calculator</title>	<style>		body{			background-color: #ffffde;		}		form{			margin: 0;		}		table,th,td{			border: 1px solid #000;		}		table{			width: 100%;			table-layout: fixed;		}		th,td{			padding: 2px 5px;		}		th{			background-color: #add8e6;		}		#option-box{			width: 532px;			border-radius: 10px;			border-color: #80c9e6;		}		.option-label{			display: inline-block;			width: 49%;			margin: 3px 0;		}		.option-label.long{			width: 100%;		}		.option-title{			display: inline-block;			width: 100px;		}		.option-submit{			float: right;			font-size: 18px;		}		.result-table-title{			margin-top: 10px;			font-weight: bold;		}		.result-table{			width: 720px;		}		.result-table-td.red{			background-color: #fcc;		}		.result-table-td.green{			background-color: #cfc;		}	</style></head><body>	<fieldset id="option-box">		<legend>Option</legend>		<form id="option-form">			<label class="option-label"><span class="option-title">CPU : </span><input type="text" name="cpu" placeholder="4" /></label>			<label class="option-label"><span class="option-title">Ram : </span><input type="text" name="ram" placeholder="8" /></label>			<label class="option-label"><span class="option-title">Storage : </span><input type="text" name="storage" placeholder="300" /></label>			<label class="option-label"><span class="option-title">Storage Type : </span>				<select id="option-storagetype">					<option value="hdd">HDD</option>					<option value="ssd">SSD</option>				</select>			</label>			<label class="option-label long"><span class="option-title">Location : </span><input type="text" name="location" placeholder="SG" /> (SG/JP/Asia/US/CA)</label>			<input class="option-submit" type="submit" value="search"/>		</form>	</fieldset>	<div id="result-table-div">		<div class="result-table-title">Sample Result</div>		<table class="result-table">			<tr>				<th>Type</th>				<th>CPU</th>				<th>Ram</th>				<th>Storage</th>				<th>S-Type</th>				<th>Similarity</th>				<th>Price</th>			</tr>			<tr>				<td>c4.xlarge</td>				<td>4</td>				<td>7.5</td>				<td>300</td>				<td class="result-table-td green">SSD</td>				<td>0.03125</td>				<td>202.32</td>			</tr>			<tr>				<td>m3.xlarge</td>				<td>4</td>				<td class="result-table-td green">15</td>				<td>300</td>				<td class="result-table-td green">SSD</td>				<td>1.75</td>				<td>318.24</td>			</tr>		</table>	</div>	<script type="text/html" id="result-table-template">		<div class="result-table-title"><%= vendor%></div>		<table class="result-table">			<tr>				<th>Type</th>				<th>CPU</th>				<th>Ram</th>				<th>Storage</th>				<th>S-Type</th>				<th>Similarity</th>				<th>Price</th>			</tr>		<% for(i in table){ %>			<tr>				<td><%= table[i]['type']%></td>				<td <% if(typeof tdClass[i+'-cpu'] != 'undefined'){ %>class="result-table-td <%= tdClass[i+'-cpu']%>"<% }%>><%= table[i]['cpu'] %></td>				<td <% if(typeof tdClass[i+'-ram'] != 'undefined'){ %>class="result-table-td <%= tdClass[i+'-ram']%>"<% }%>><%= table[i]['ram'] %></td>				<td <% if(typeof tdClass[i+'-storage'] != 'undefined'){ %>class="result-table-td <%= tdClass[i+'-storage']%>"<% }%>><%= table[i]['storage'] %></td>				<td <% if(typeof tdClass[i+'-storageType'] != 'undefined'){ %>class="result-table-td <%= tdClass[i+'-storageType']%>"<% }%>><%= table[i]['storageType'] %></td>				<td><%= table[i]['rating']%></td>				<td><%= table[i]['price']%></td>			</tr>		<% } %>		</table>	</script>	<script type="text/javascript">		document.getElementById('option-form').addEventListener('submit', function(event){			event.preventDefault();			// Initiate variables			var cpu = getInput('cpu');			var ram = getInput('ram');			var storage = getInput('storage');			var selectElem = document.getElementById('option-storagetype');			var storageType = selectElem.options[selectElem.selectedIndex].value;			var location = getInput('location');			var url = "price.php?cpu=" + cpu + "&ram=" + ram + "&storage=" + storage + "&storageType=" + storageType + "&location=" + location;			// Ajax			var xhttp = new XMLHttpRequest();			xhttp.open("GET", url, true);			xhttp.onreadystatechange = function(){				if(this.readyState == 4 && this.status == 200){					//console.log(this.responseText);					var priceList = JSON.parse(this.responseText);					formatResultTable(priceList, cpu, ram, storage, storageType);				}			};			xhttp.send();			return false;		});		function formatResultTable(priceList, cpu , ram, storage, storageType){			var html = '';			var templateHtml = document.getElementById('result-table-template').innerHTML;			for(vendor in  priceList){				var detail = priceList[vendor]['detail'];				var tableParams = [];				var tdClass = {};				// Handle case of single result				if(typeof detail[0] == "undefined"){					detail = [detail];				}				// Loop through the price detail to fine tune values				// Also check the results match the requested one. If it contains a big difference, mark a gree or red color on background.				for(i in detail){					// Check cpu, ram, storage					['cpu', 'ram', 'storage'].forEach(function(key){						var requestVal = parseFloat(eval(key));						var detailVal = parseFloat(detail[i][key]);						if(Math.abs(requestVal - detailVal)/requestVal > 0.1){							tdClass[i+'-'+key] = (requestVal > detailVal)? 'red' : 'green';						}					});					// Check storage type					if(storageType == 'hdd' && typeof detail[i]['ssd'] != 'undefined'){						tdClass[i+'-storageType'] = 'green';					}					else if(storageType == 'ssd' && typeof detail[i]['ssd'] == 'undefined'){						tdClass[i+'-storageType'] = 'red';					}					// Tuning display of storageType, rating and price					detail[i]['storageType'] = detail[i]['storageType'].toUpperCase();					if(typeof detail[i]['rating'] == 'undefined')						detail[i]['rating'] = 0;					else						detail[i]['rating'] = Math.round(detail[i]['rating'] * 100000)/100000;					detail[i]['price'] = Math.round(detail[i]['price'] * 100)/100;				}				var params = {					vendor : vendor + " (" + priceList[vendor]['location'] + ")",					table : detail,					tdClass : tdClass				};				html += html_template(templateHtml, params);			}			document.getElementById('result-table-div').innerHTML = html;		}		function html_template(templateStr, vars){                // Simple checking on the validness of template simple (not accurate)                var positiveSym = (templateStr.match(/<%/g) || []).length;                var negativeSym = (templateStr.match(/%>/g) || []).length;                if(positiveSym !== negativeSym){                	return false;                }                // Extract the variables                for(var key in vars){                	window[key] = vars[key];                }                var pos = 0;                var endPos = 0;                var tempEval;                // Replace the inline variables//              while( (pos = templateStr.indexOf('<%=')) >= 0){//                      endPos = templateStr.indexOf('%>', pos + 1);//                      tempEval = templateStr.slice(pos + 3, endPos);//                      tempEval = eval(tempEval);//                      templateStr = templateStr.slice(0, pos) + tempEval + templateStr.slice(endPos + 2);//              }////              console.log(templateStr);//              return false;                // Consturction of evalStr                var evalStr = "out = '';";                endPos = 0;                while( ( pos = templateStr.indexOf('<%', endPos) ) >= 0 ){                        evalStr += "\nout += '" + templateStr.slice(endPos, pos).replace(/\n/g, " ").replace(/'/g, "\\'") + "';";                        endPos = templateStr.indexOf('%>', pos + 1);                        if( templateStr.charAt(pos + 2) === '=' )                                evalStr += "\nout += (" + templateStr.slice(pos + 3, endPos) + ");";                        else                                evalStr += "\n" + templateStr.slice(pos + 2, endPos);                        endPos += 2;                }                evalStr += "\nout += '" + templateStr.slice(endPos).replace(/\n/g," ").replace(/'/g, "\\'") + "';";                window.templateStr = templateStr;                window.evalStr = evalStr;                return eval(evalStr);        }        function getInput(name){			return document.getElementsByName(name)[0].value != ""? document.getElementsByName(name)[0].value : document.getElementsByName(name)[0].placeholder;		}	</script></body>